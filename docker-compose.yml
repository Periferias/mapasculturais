services:
  web:
    image: nginx:1.25.5-alpine
    restart: unless-stopped
    volumes:
      - /dev/null:/var/www/html/index.php
      - ./docker-data/public-files:/var/www/html/files
      - ./docker-data/assets:/var/www/html/assets
      # versão sem ssl
      - ./docker/production/nginx.conf:/etc/nginx/conf.d/default.conf
      # versão com ssl
      #- ./docker/production/nginx-ssl.conf:/etc/nginx/conf.d/default.conf
      #- ./docker-data/certs/conf:/etc/letsencrypt
      #- ./docker-data/certs/www:/var/www/certbot
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    links:
      - app
    depends_on:
      app:
        condition: service_started

  app:
    env_file:
      - .env
    build:
      context: ./
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    volumes:
      - ./.env:/.env
      - ./docker-data/assets:/var/www/html/assets
      - ./docker-data/public-files:/var/www/html/files
      - ./docker-data/private-files:/var/www/var/private-files
      - ./docker-data/saas-files:/var/www/var/saas-files
      - ./docker-data/sessions:/var/www/var/sessions
      - ./docker-data/logs:/var/www/var/logs
      - ./docker/production/config.d:/var/www/config/prod.d
    environment:
      - REDIS_CACHE=cache
      - SESSIONS_SAVE_PATH=tcp://session:6379
    links:
      - database
      - cache
      - session
    depends_on:
      database:
        condition: service_started
      cache:
        condition: service_started
      session:
        condition: service_started

  cache:
    image: redis:6.2.14-alpine
    command: --maxmemory 1256Mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    volumes:
      - cache_data:/data

  session:
    image: redis:6.2.14-alpine
    command: --maxmemory 384Mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    volumes:
      - ./docker-data/sessions:/data

  database:
    image: postgis/postgis:14-master
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=mapas
      - POSTGRES_USER=mapas
      - POSTGRES_DB=mapas
    volumes:
      - ./docker/db:/docker-entrypoint-initdb.d
      - database_data:/var/lib/postgresql/data

volumes:
  database_data:
  cache_data:

